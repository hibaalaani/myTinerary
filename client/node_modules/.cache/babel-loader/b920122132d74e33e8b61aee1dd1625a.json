{"ast":null,"code":"import axios from \"axios\";\nexport const fitchItinerariesAction = () => {\n  return dispatch => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/itineraries\").then(resp => {\n      return resp.json();\n    }).then(json => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const fetchItinerariesByCityName = city => {\n  console.log(\"city\", city);\n  return dispatch => {\n    fetch(\"http://localhost:5000/api/itineraries/\" + city).then(resp => {\n      return resp.json();\n    }).then(json => {\n      console.log(\"json :\", json);\n      dispatch({\n        type: \"FETCH_ITINERARIES_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const fetchItinerariesFavorite = (emailAdded, id, name) => {\n  return dispatch => {\n    axios.post(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n      email: emailAdded\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"ADD_ITINERARY_FAVORITE\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link\");\n        }\n      }\n    });\n  };\n}; ////////////delete email favorite from the itinerary\n\nexport const fetchItinerariesDeleteFavorite = (emailAdded, name) => {\n  return dispatch => {\n    axios.delete(`http://localhost:5000/api/itineraries/${name}/favorites`, {\n      email: emailAdded\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"DELETE_ITINERARY_FAVORITE\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error \" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link at delete fav\");\n        }\n      }\n    });\n  };\n}; ////////////////Add comments to the itinerary by user\n\nexport const addComments = (comments, name, email) => {\n  console.log(\"name\", name);\n  return dispatch => {\n    axios.post(`http://localhost:5000/api/itineraries/${name}/comments`, {\n      comments: comments,\n      email\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"ADD_COMMENTS\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link\");\n        }\n      }\n    });\n  };\n};\nexport const fetchDeleteComment = (comments, email, name) => {\n  console.log(\"name\", name);\n  return dispatch => {\n    axios.delete(`http://localhost:5000/api/itineraries/${name}/comments`, {\n      comments: comments,\n      email\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"DELETE_COMMENTS\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link\");\n        }\n      }\n    });\n  };\n}; ////////Add itinerary\n\nexport const fetchNewItinerary = (newitinerary, token) => {\n  return dispatch => {\n    console.log(\"newitinerary :\", newitinerary);\n    console.log(\"token\", token);\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.post(\"http://localhost:5000/api/itineraries/add\", newitinerary, config).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //why are you trying to get a token here? this is just bad copy pasting from other routes\n        // const token = res.data.token;\n        // localStorage.setItem(\"token\", token);\n        // console.log(\"token\", token);\n        // const decoded = jwt_decode(token); // decode your token here\n        // console.log(\"decoded\", decoded);\n        //send the user to his account page\n        dispatch({\n          type: \"ADD_ITINERARY\"\n        });\n        dispatch(fetchItinerariesByCityName(newitinerary.name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"error from action itinerary\", error);\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/store/actions/itineraryActions.js"],"names":["axios","fitchItinerariesAction","dispatch","fetch","then","resp","json","type","payload","catch","err","fetchItinerariesByCityName","city","console","log","fetchItinerariesFavorite","emailAdded","id","name","post","email","res","status","error","response","alert","fetchItinerariesDeleteFavorite","delete","addComments","comments","fetchDeleteComment","fetchNewItinerary","newitinerary","token","config","headers","Authorization"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nexport const fitchItinerariesAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/itineraries\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesByCityName = (city) => {\n  console.log(\"city\", city);\n  return (dispatch) => {\n    fetch(\"http://localhost:5000/api/itineraries/\" + city)\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        console.log(\"json :\", json);\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesFavorite = (emailAdded, id, name) => {\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n\n////////////delete email favorite from the itinerary\nexport const fetchItinerariesDeleteFavorite = (emailAdded, name) => {\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:5000/api/itineraries/${name}/favorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error \" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link at delete fav\");\n          }\n        }\n      });\n  };\n};\n////////////////Add comments to the itinerary by user\nexport const addComments = (comments, name, email) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${name}/comments`, {\n        comments: comments,\n        email,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\nexport const fetchDeleteComment = (comments, email, name) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:5000/api/itineraries/${name}/comments`, {\n        comments: comments,\n        email,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n////////Add itinerary\nexport const fetchNewItinerary = (newitinerary, token) => {\n  return (dispatch) => {\n    console.log(\"newitinerary :\", newitinerary);\n    console.log(\"token\", token);\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n    axios\n      .post(\"http://localhost:5000/api/itineraries/add\", newitinerary, config)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //why are you trying to get a token here? this is just bad copy pasting from other routes\n\n          // const token = res.data.token;\n          // localStorage.setItem(\"token\", token);\n          // console.log(\"token\", token);\n          // const decoded = jwt_decode(token); // decode your token here\n          // console.log(\"decoded\", decoded);\n          //send the user to his account page\n\n          dispatch({ type: \"ADD_ITINERARY\" });\n          dispatch(fetchItinerariesByCityName(newitinerary.name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"error from action itinerary\", error);\n          }\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}