{"ast":null,"code":"import axios from \"axios\";\nexport const fitchItinerariesAction = () => {\n  return dispatch => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/itineraries\").then(resp => {\n      return resp.json();\n    }).then(json => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const fetchItinerariesByCityName = city => {\n  console.log(\"city\", city);\n  return dispatch => {\n    fetch(\"http://localhost:5000/api/itineraries/all/\" + city).then(resp => {\n      return resp.json();\n    }).then(json => {\n      console.log(\"json :\", json);\n      dispatch({\n        type: \"FETCH_ITINERARIES_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_ITINERARIES_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const fetchItinerariesFavorite = (emailAdded, id, name) => {\n  return dispatch => {\n    axios.post(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n      email: emailAdded\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"ADD_ITINERARY_FAVORITE\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link\");\n        }\n      }\n    });\n  };\n}; ////////////delete email favorite from the itinerary\n\nexport const fetchItinerariesDeleteFavorite = (emailAdded, id, name) => {\n  return dispatch => {\n    axios.delete(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n      email: emailAdded\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"DELETE_ITINERARY_FAVORITE\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error \" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link at delete fav\");\n        }\n      }\n    });\n  };\n}; ///////////////fetch the profile favorite\n\nexport const fetchProfileFavorites = (ids, itineraries) => {\n  console.log(\"ids\", ids);\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/itineraries/userfavorites\", {\n      ids: ids\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"FETCH_PROFILE_ITINERARY\",\n          payload: res.data\n        }); // dispatch(fetchItinerariesByCityName(itineraries));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"error from profile action itinerary\");\n        }\n      }\n    });\n  };\n}; ////////////////Add comments to the itinerary by user\n\nexport const addComments = (comments, name, id, email) => {\n  console.log(\"name\", name);\n  return dispatch => {\n    axios.post(`http://localhost:5000/api/itineraries/${id}/comments`, {\n      comments: comments,\n      email\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"ADD_COMMENTS\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"alert from comment action\");\n        }\n      }\n    });\n  };\n};\nexport const fetchDeleteComment = (comments, name, id) => {\n  console.log(\"name\", name);\n  return dispatch => {\n    axios.delete(`http://localhost:5000/api/itineraries/${id}/comments`, {\n      comments: comments\n    }).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"DELETE_COMMENTS\"\n        });\n        dispatch(fetchItinerariesByCityName(name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"alert from comment action\");\n        }\n      }\n    });\n  };\n}; ////////Add itinerary\n\nexport const fetchNewItinerary = (newitinerary, token) => {\n  return dispatch => {\n    console.log(\"newitinerary :\", newitinerary);\n    console.log(\"token\", token);\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.post(\"http://localhost:5000/api/itineraries/add\", newitinerary, config).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //why are you trying to get a token here? this is just bad copy pasting from other routes\n        dispatch({\n          type: \"ADD_ITINERARY\"\n        });\n        dispatch(fetchItinerariesByCityName(newitinerary.name));\n      }\n    }).catch(error => {\n      console.log(\"error\" + error);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"error from add fetch\", error);\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/store/actions/itineraryActions.js"],"names":["axios","fitchItinerariesAction","dispatch","fetch","then","resp","json","type","payload","catch","err","fetchItinerariesByCityName","city","console","log","fetchItinerariesFavorite","emailAdded","id","name","post","email","res","status","error","response","alert","fetchItinerariesDeleteFavorite","delete","fetchProfileFavorites","ids","itineraries","data","addComments","comments","fetchDeleteComment","fetchNewItinerary","newitinerary","token","config","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAQC,QAAD,IAAc;AACnB;AACAC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,2BAAR;AAAqCC,QAAAA,OAAO,EAAEF;AAA9C,OAAD,CAAR;AACD,KANH,EAOGG,KAPH,CAOUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,OAAO,EAAEE;AAA5C,OAAD,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;AAeP,OAAO,MAAMC,0BAA0B,GAAIC,IAAD,IAAU;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,SAAQV,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,+CAA+CS,IAAhD,CAAL,CACGR,IADH,CACSC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AACdO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,IAAtB;AACAJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,2BAAR;AAAqCC,QAAAA,OAAO,EAAEF;AAA9C,OAAD,CAAR;AACD,KAPH,EAQGG,KARH,CAQUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,OAAO,EAAEE;AAA5C,OAAD,CAAR;AACD,KAVH;AAWD,GAZD;AAaD,CAfM;AAgBP,OAAO,MAAMK,wBAAwB,GAAG,CAACC,UAAD,EAAaC,EAAb,EAAiBC,IAAjB,KAA0B;AAChE,SAAQhB,QAAD,IAAc;AACnBF,IAAAA,KAAK,CACFmB,IADH,CACS,yCAAwCF,EAAG,YADpD,EACiE;AAC7DG,MAAAA,KAAK,EAAEJ;AADsD,KADjE,EAIGZ,IAJH,CAISiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAL,QAAAA,QAAQ,CAACS,0BAA0B,CAACO,IAAD,CAA3B,CAAR;AACD;AACF,KAXH,EAYGT,KAZH,CAYUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUS,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF;AACF,KAtBH;AAuBD,GAxBD;AAyBD,CA1BM,C,CA4BP;;AACA,OAAO,MAAMC,8BAA8B,GAAG,CAACV,UAAD,EAAaC,EAAb,EAAiBC,IAAjB,KAA0B;AACtE,SAAQhB,QAAD,IAAc;AACnBF,IAAAA,KAAK,CACF2B,MADH,CACW,yCAAwCV,EAAG,YADtD,EACmE;AAC/DG,MAAAA,KAAK,EAAEJ;AADwD,KADnE,EAIGZ,IAJH,CAISiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAL,QAAAA,QAAQ,CAACS,0BAA0B,CAACO,IAAD,CAA3B,CAAR;AACD;AACF,KAXH,EAYGT,KAZH,CAYUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWS,KAAK,CAACC,QAA7B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,gDAAD,CAAL;AACD;AACF;AACF,KAtBH;AAuBD,GAxBD;AAyBD,CA1BM,C,CA2BP;;AACA,OAAO,MAAMG,qBAAqB,GAAG,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACzDjB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBe,GAAnB;AAEA,SAAQ3B,QAAD,IAAc;AACnBF,IAAAA,KAAK,CACFmB,IADH,CACQ,qDADR,EAC+D;AAC3DU,MAAAA,GAAG,EAAEA;AADsD,KAD/D,EAIGzB,IAJH,CAISiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE,yBAAR;AAAmCC,UAAAA,OAAO,EAAEa,GAAG,CAACU;AAAhD,SAAD,CAAR,CAFsB,CAGtB;AACD;AACF,KAXH,EAYGtB,KAZH,CAYUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUS,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF;AACF,KAtBH;AAuBD,GAxBD;AAyBD,CA5BM,C,CA6BP;;AACA,OAAO,MAAMO,WAAW,GAAG,CAACC,QAAD,EAAWf,IAAX,EAAiBD,EAAjB,EAAqBG,KAArB,KAA+B;AACxDP,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AACA,SAAQhB,QAAD,IAAc;AACnBF,IAAAA,KAAK,CACFmB,IADH,CACS,yCAAwCF,EAAG,WADpD,EACgE;AAC5DgB,MAAAA,QAAQ,EAAEA,QADkD;AAE5Db,MAAAA;AAF4D,KADhE,EAKGhB,IALH,CAKSiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAL,QAAAA,QAAQ,CAACS,0BAA0B,CAACO,IAAD,CAA3B,CAAR;AACD;AACF,KAZH,EAaGT,KAbH,CAaUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUS,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;AACF;AACF,KAvBH;AAwBD,GAzBD;AA0BD,CA5BM;AA6BP,OAAO,MAAMS,kBAAkB,GAAG,CAACD,QAAD,EAAWf,IAAX,EAAiBD,EAAjB,KAAwB;AACxDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AACA,SAAQhB,QAAD,IAAc;AACnBF,IAAAA,KAAK,CACF2B,MADH,CACW,yCAAwCV,EAAG,WADtD,EACkE;AAC9DgB,MAAAA,QAAQ,EAAEA;AADoD,KADlE,EAIG7B,IAJH,CAISiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAL,QAAAA,QAAQ,CAACS,0BAA0B,CAACO,IAAD,CAA3B,CAAR;AACD;AACF,KAXH,EAYGT,KAZH,CAYUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUS,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;AACF;AACF,KAtBH;AAuBD,GAxBD;AAyBD,CA3BM,C,CA4BP;;AACA,OAAO,MAAMU,iBAAiB,GAAG,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACxD,SAAQnC,QAAD,IAAc;AACnBW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BsB,YAA9B;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuB,KAArB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEH;AADR;AADI,KAAf;AAKArC,IAAAA,KAAK,CACFmB,IADH,CACQ,2CADR,EACqDiB,YADrD,EACmEE,MADnE,EAEGlC,IAFH,CAESiB,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;;AACA,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACApB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAL,QAAAA,QAAQ,CAACS,0BAA0B,CAACyB,YAAY,CAAClB,IAAd,CAA3B,CAAR;AACD;AACF,KATH,EAUGT,KAVH,CAUUc,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUS,KAAtB;;AACA,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeF,MAAf,KAA0B,GAA9B,EAAmC;AACjCG,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,sBAAD,EAAyBF,KAAzB,CAAL;AACD;AACF;AACF,KApBH;AAqBD,GA7BD;AA8BD,CA/BM","sourcesContent":["import axios from \"axios\";\nexport const fitchItinerariesAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/itineraries\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesByCityName = (city) => {\n  console.log(\"city\", city);\n  return (dispatch) => {\n    fetch(\"http://localhost:5000/api/itineraries/all/\" + city)\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        console.log(\"json :\", json);\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesFavorite = (emailAdded, id, name) => {\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n\n////////////delete email favorite from the itinerary\nexport const fetchItinerariesDeleteFavorite = (emailAdded, id, name) => {\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error \" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link at delete fav\");\n          }\n        }\n      });\n  };\n};\n///////////////fetch the profile favorite\nexport const fetchProfileFavorites = (ids, itineraries) => {\n  console.log(\"ids\", ids);\n\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/itineraries/userfavorites\", {\n        ids: ids,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"FETCH_PROFILE_ITINERARY\", payload: res.data });\n          // dispatch(fetchItinerariesByCityName(itineraries));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"error from profile action itinerary\");\n          }\n        }\n      });\n  };\n};\n////////////////Add comments to the itinerary by user\nexport const addComments = (comments, name, id, email) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/comments`, {\n        comments: comments,\n        email,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"alert from comment action\");\n          }\n        }\n      });\n  };\n};\nexport const fetchDeleteComment = (comments, name, id) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:5000/api/itineraries/${id}/comments`, {\n        comments: comments,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"alert from comment action\");\n          }\n        }\n      });\n  };\n};\n////////Add itinerary\nexport const fetchNewItinerary = (newitinerary, token) => {\n  return (dispatch) => {\n    console.log(\"newitinerary :\", newitinerary);\n    console.log(\"token\", token);\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n    axios\n      .post(\"http://localhost:5000/api/itineraries/add\", newitinerary, config)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //why are you trying to get a token here? this is just bad copy pasting from other routes\n          dispatch({ type: \"ADD_ITINERARY\" });\n          dispatch(fetchItinerariesByCityName(newitinerary.name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"error from add fetch\", error);\n          }\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}