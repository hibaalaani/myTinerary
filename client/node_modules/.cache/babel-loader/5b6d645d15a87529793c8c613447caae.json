{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nconst green = \"#39D1B4\";\nconst yellow = \"#FFD712\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      console.log(e);\n      const newColor = this.state.favColor == green ? yellow : green;\n      this.setState({\n        favColor: newColor\n      }); // this.setState({\n      ///change the button color\n      /////post the favourite to the user\n      // const newFavourite = this.props.match.params.name;\n\n      console.log(\"newFavourite\", newFavourite);\n      axios.post(\"http://localhost:5000/api/users/favourite\", newFavourite).then(res => {\n        console.log(\"response\", res);\n\n        if (res.status === 200) {\n          //send the user to his account page\n          window.location = \"/favourite\";\n        }\n\n        this.setState({\n          users: [...this.state.favourite, newFavourite]\n        });\n      }).catch(error => {\n        console.log(\"error\" + error.response);\n\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"This email is already in use\");\n          } else {//alert with something else\n          }\n        }\n      }); // });\n    };\n\n    this.state = {\n      itineraries: [],\n      favourite: \"\",\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter(); // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container  itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price)))), React.createElement(\"button\", {\n      btn: true,\n      style: {\n        background: this.state.favColor\n      },\n      onClick: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add To Your Favourite\", \" \"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    itineraries: state.itineraries.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","axios","fetchItinerariesByCityName","green","yellow","Itinerary","constructor","handelChange","e","console","log","newColor","state","favColor","setState","newFavourite","post","then","res","status","window","location","users","favourite","catch","error","response","alert","itineraries","bind","componentDidMount","city","props","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","name","activities","duration","price","background","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nconst green = \"#39D1B4\";\nconst yellow = \"#FFD712\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favourite: \"\",\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = e => {\n    console.log(e);\n    const newColor = this.state.favColor == green ? yellow : green;\n    this.setState({ favColor: newColor });\n    // this.setState({\n    ///change the button color\n    /////post the favourite to the user\n    // const newFavourite = this.props.match.params.name;\n    console.log(\"newFavourite\", newFavourite);\n    axios\n      .post(\"http://localhost:5000/api/users/favourite\", newFavourite)\n      .then(res => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          window.location = \"/favourite\";\n        }\n        this.setState({\n          users: [...this.state.favourite, newFavourite]\n        });\n      })\n      .catch(error => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"This email is already in use\");\n          } else {\n            //alert with something else\n          }\n        }\n      });\n    // });\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    // const { itineraries } = this.props;\n    return (\n      <div>\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container  itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n              </div>\n            </div>\n          ))}\n        <button\n          btn\n          style={{ background: this.state.favColor }}\n          onClick={this.handelChange}\n        >\n          Add To Your Favourite{\" \"}\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    itineraries: state.itineraries.itineraries\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}