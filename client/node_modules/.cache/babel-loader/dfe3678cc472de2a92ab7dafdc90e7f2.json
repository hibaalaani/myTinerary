{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\AddComments.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addComments } from \"../store/actions/itineraryActions\";\n\nclass AddComments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      comments: \"\"\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        comments: e.target.value\n      });\n    };\n\n    this.onSubmit = name => {\n      if (this.props.user === null) {\n        alert(\"you need tpo log in\");\n      } else {\n        const email = this.props.user.email;\n        const comments = this.state.comments;\n        console.log(\"comments\", comments); //////add comments\n\n        this.props.addComments(comments, name, email); ///////////close modal\n\n        this.toggle();\n      }\n    };\n  }\n\n  render() {\n    const itinerary = this.props.itinerary;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Button, {\n      variant: \"primary\",\n      color: \"primary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Add Comment\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add comment to the itinerary\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Write your comment \"), React.createElement(Input, {\n      type: \"text\" // name=\"comments\"\n      ,\n      id: \"comments\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\",\n      block: true,\n      style: {\n        marginTop: \"2rem\"\n      },\n      onClick: () => this.onSubmit(itinerary.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add Comments\"))), \" \"))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comments: state.itineraries.comments,\n    itineraries: state.itineraries.itineraries,\n    user: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addComments: (comments, name, email) => dispatch(addComments(comments, name, email))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComments);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/AddComments.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","addComments","AddComments","state","modal","comments","toggle","setState","onChange","e","target","value","onSubmit","name","props","user","alert","email","console","log","render","itinerary","marginTop","mapStateToProps","ownProps","itineraries","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addComments } from \"../store/actions/itineraryActions\";\n\nclass AddComments extends Component {\n  state = {\n    modal: false,\n    comments: \"\",\n  };\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n  onChange = (e) => {\n    this.setState({\n      comments: e.target.value,\n    });\n  };\n  onSubmit = (name) => {\n    if (this.props.user === null) {\n      alert(\"you need tpo log in\");\n    } else {\n      const email = this.props.user.email;\n      const comments = this.state.comments;\n      console.log(\"comments\", comments);\n\n      //////add comments\n      this.props.addComments(comments, name, email);\n      ///////////close modal\n      this.toggle();\n    }\n  };\n\n  render() {\n    const itinerary = this.props.itinerary;\n    return (\n      <div>\n        <>\n          <Button variant=\"primary\" color=\"primary\" onClick={this.toggle}>\n            Add Comment\n          </Button>\n\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>\n              Add comment to the itinerary\n            </ModalHeader>\n            <ModalBody>\n              <Form>\n                <FormGroup>\n                  <Label for=\"comments\">Write your comment </Label>\n                  <Input\n                    type=\"text\"\n                    // name=\"comments\"\n                    id=\"comments\"\n                    onChange={this.onChange}\n                  />\n                  <Button\n                    color=\"dark\"\n                    block\n                    style={{ marginTop: \"2rem\" }}\n                    onClick={() => this.onSubmit(itinerary.name)}\n                  >\n                    Add Comments\n                  </Button>\n                </FormGroup>\n              </Form>{\" \"}\n            </ModalBody>\n          </Modal>\n        </>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comments: state.itineraries.comments,\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  addComments: (comments, name, email) =>\n    dispatch(addComments(comments, name, email)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComments);\n"]},"metadata":{},"sourceType":"module"}