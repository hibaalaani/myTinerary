{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddComments from \"../Component/AddComments\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { fetchItinerariesFavorite, fetchItinerariesDeleteFavorite, fetchDeleteComment } from \"../store/actions/itineraryActions\";\nimport AddItinerary from \"./AddItinerary\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, Card } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      const newColor = this.state.favColor === green ? red : green;\n      this.setState({\n        favColor: newColor\n      });\n    };\n\n    this.handelFavorite = (id, name) => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchItinerariesFavorite(emailAdded, id, name);\n    };\n\n    this.handelDeleteFavorite = (id, name) => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n    };\n\n    this.handelDeleteComment = (id, name) => {\n      const email = this.props.user.email;\n      const comments = this.state.comments;\n      console.log(\"comment\", comments);\n      console.log(\"nameItiner\", name);\n      this.props.fetchDeleteComment(comments, name, id, email);\n    };\n\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email; // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container m-2 itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price), React.createElement(\"div\", {\n      className: \"row justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      size: \"3x\",\n      style: itinerary.favorites.includes(email) ? {\n        color: \"red\"\n      } : {\n        color: \"green\"\n      } // onClick={() => this.handelFavorite(itinerary.name)}\n      ,\n      onClick: () => itinerary.favorites.includes(email) ? this.handelDeleteFavorite(itinerary._id, itinerary.name) : this.handelFavorite(itinerary._id, itinerary.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(AddComments, {\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, itinerary.comments && itinerary.comments.map(comment => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"What Other Said\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        className: \"textColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, comment.msg), React.createElement(\"footer\", {\n        className: \"blockquote-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"cite\", {\n        title: \"Source Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Written by\"), \" \", comment.email, \" \"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => comment.email && comment.email.includes(email) ? this.handelDeleteComment(itinerary.name, itinerary._id) : alert(\"its not your comment\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Delete Comment\"))));\n    })))))), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(AddItinerary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city)),\n  fetchItinerariesFavorite: (emailAdded, id, name) => dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) => dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n  fetchDeleteComment: (comments, name, id, email) => dispatch(fetchDeleteComment(comments, name, id, email))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","AddComments","fetchItinerariesByCityName","fetchItinerariesFavorite","fetchItinerariesDeleteFavorite","fetchDeleteComment","AddItinerary","FontAwesomeIcon","faHeart","Button","Card","green","red","Itinerary","constructor","handelChange","e","newColor","state","favColor","setState","handelFavorite","id","name","emailAdded","props","user","email","handelDeleteFavorite","handelDeleteComment","comments","console","log","itineraries","favorites","componentDidMount","city","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","activities","duration","price","includes","color","_id","comment","width","msg","alert","mapStateToProps","ownProps","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddComments from \"../Component/AddComments\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport {\n  fetchItinerariesFavorite,\n  fetchItinerariesDeleteFavorite,\n  fetchDeleteComment,\n} from \"../store/actions/itineraryActions\";\nimport AddItinerary from \"./AddItinerary\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, Card } from \"react-bootstrap\";\n\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n      comments: [],\n    };\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (e) => {\n    const newColor = this.state.favColor === green ? red : green;\n    this.setState({ favColor: newColor });\n  };\n  handelFavorite = (id, name) => {\n    const emailAdded = this.props.user.email;\n\n    this.props.fetchItinerariesFavorite(emailAdded, id, name);\n  };\n  handelDeleteFavorite = (id, name) => {\n    const emailAdded = this.props.user.email;\n    this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n  };\n  handelDeleteComment = (id, name) => {\n    const email = this.props.user.email;\n    const comments = this.state.comments;\n    console.log(\"comment\", comments);\n    console.log(\"nameItiner\", name);\n    this.props.fetchDeleteComment(comments, name, id, email);\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n    // const { itineraries } = this.props;\n    return (\n      <div className=\"container\">\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container m-2 itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <div className=\"row justify-content-around\">\n                  <FontAwesomeIcon\n                    icon={faHeart}\n                    size=\"3x\"\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"green\" }\n                    }\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(\n                            itinerary._id,\n                            itinerary.name\n                          )\n                        : this.handelFavorite(itinerary._id, itinerary.name)\n                    }\n                  />\n\n                  <AddComments itinerary={itinerary} />\n                </div>\n                <div>\n                  <div>\n                    {itinerary.comments &&\n                      itinerary.comments.map((comment) => {\n                        return (\n                          <div>\n                            <Card style={{ width: \"18rem\" }}>\n                              <Card.Header>What Other Said</Card.Header>\n                              <Card.Body>\n                                <Card.Text className=\"textColor\">\n                                  {comment.msg}\n                                </Card.Text>\n                                <footer className=\"blockquote-footer\">\n                                  <cite title=\"Source Title\">Written by</cite>{\" \"}\n                                  {comment.email}{\" \"}\n                                </footer>\n                                <Button\n                                  variant=\"primary\"\n                                  onClick={() =>\n                                    comment.email &&\n                                    comment.email.includes(email)\n                                      ? this.handelDeleteComment(\n                                          itinerary.name,\n                                          itinerary._id\n                                        )\n                                      : alert(\"its not your comment\")\n                                  }\n                                >\n                                  Delete Comment\n                                </Button>\n                              </Card.Body>\n                            </Card>\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        <React.Fragment>\n          <AddItinerary />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n\n  fetchItinerariesFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n  fetchDeleteComment: (comments, name, id, email) =>\n    dispatch(fetchDeleteComment(comments, name, id, email)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}