{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      console.log(e);\n      const newColor = this.state.favColor == green ? red : green;\n      this.setState({\n        favColor: newColor\n      }); // this.setState({\n      ///change the button color\n      /////post the favourite to the user\n\n      const newFavorite = this.props.user.users;\n      console.log(\"newFavorite\", newFavorite); // const newFavorite = this.props.itineraries;\n      // console.log(\"newFavourite\", newFavourite);\n\n      axios.post(\"http://localhost:5000/api/itineraries/:name/favorites\", newFavorite).then(res => {\n        console.log(\"response\", res);\n\n        if (res.status === 200) {\n          //send the favorite user to the itinerary favorite\n          this.setState({ ...this.state.favorite,\n            newFavorite\n          });\n        }\n      }) // if (this.state.favourites != newFavourite) {\n      //   this.setState({\n      //     users: [...this.state.favourite, newFavourite],\n      //   });\n      // } else {\n      //   this.setState({\n      //     users: [...this.state.favourite, \"\"],\n      //   });\n      // }\n      //     })\n      .catch(error => {\n        console.log(\"error \" + error.response);\n\n        if (error.response) {\n          console.log(error.response.status);\n        }\n\n        if (error.response.status === 409) {\n          alert(\"This email is already in use\");\n        } else {\n          //alert with something else\n          alert(\"you add this itinerary\");\n        }\n      });\n    };\n\n    this.state = {\n      itineraries: [],\n      favorites: \"\",\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter(); // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container  itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price), React.createElement(\"div\", {\n      className: \"row justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      className: \"col-sm-4\",\n      size: \"3x\",\n      style: {\n        color: this.state.favColor\n      },\n      onClick: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"danger\",\n      className: \"col-sm-4\",\n      size: \"lg\",\n      onClick: id => {\n        this.setState(() => ({\n          itineraries: this.state.itineraries.filter(itinerary => itinerary.id != id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\xD7\"))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","axios","useHistory","fetchItinerariesByCityName","FontAwesomeIcon","faHeart","Button","green","red","Itinerary","constructor","handelChange","e","console","log","newColor","state","favColor","setState","newFavorite","props","user","users","post","then","res","status","favorite","catch","error","response","alert","itineraries","favorites","bind","componentDidMount","city","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","name","activities","duration","price","color","id","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: \"\",\n      favColor: green,\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (e) => {\n    console.log(e);\n    const newColor = this.state.favColor == green ? red : green;\n    this.setState({ favColor: newColor });\n    // this.setState({\n    ///change the button color\n    /////post the favourite to the user\n    const newFavorite = this.props.user.users;\n    console.log(\"newFavorite\", newFavorite);\n    // const newFavorite = this.props.itineraries;\n    // console.log(\"newFavourite\", newFavourite);\n    axios\n      .post(\n        \"http://localhost:5000/api/itineraries/:name/favorites\",\n        newFavorite\n      )\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the favorite user to the itinerary favorite\n\n          this.setState({ ...this.state.favorite, newFavorite });\n        }\n      })\n      // if (this.state.favourites != newFavourite) {\n      //   this.setState({\n      //     users: [...this.state.favourite, newFavourite],\n      //   });\n      // } else {\n      //   this.setState({\n      //     users: [...this.state.favourite, \"\"],\n      //   });\n      // }\n      //     })\n\n      .catch((error) => {\n        console.log(\"error \" + error.response);\n        if (error.response) {\n          console.log(error.response.status);\n        }\n        if (error.response.status === 409) {\n          alert(\"This email is already in use\");\n        } else {\n          //alert with something else\n          alert(\"you add this itinerary\");\n        }\n      });\n  };\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    // const { itineraries } = this.props;\n    return (\n      <div>\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container  itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <div className=\"row justify-content-around\">\n                  <FontAwesomeIcon\n                    icon={faHeart}\n                    className=\"col-sm-4\"\n                    size=\"3x\"\n                    style={{ color: this.state.favColor }}\n                    onClick={this.handelChange}\n                  />\n                  <Button\n                    color=\"danger\"\n                    className=\"col-sm-4\"\n                    size=\"lg\"\n                    onClick={(id) => {\n                      this.setState(() => ({\n                        itineraries: this.state.itineraries.filter(\n                          (itinerary) => itinerary.id != id\n                        ),\n                      }));\n                    }}\n                  >\n                    &times;\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ))}\n        {/* <FontAwesomeIcon\n          icon={faHeart}\n          className=\"mr-2 \"\n          style={{ background: this.state.favColor }}\n          onClick={this.handelChange}\n        /> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}