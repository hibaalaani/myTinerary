{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n// import { login } from \"../store/actions/usersAction\";\n\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { fetchItinerariesFavorite } from \"../store/actions/itineraryActions\";\nimport { fetchDeleteFavorite } from \"../store/actions/itineraryActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddComments from \"../Component/AddComments\"; // import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\"; // import { Button } from \"react-bootstrap\";\n\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      console.log(e);\n      const newColor = this.state.favColor === green ? red : green;\n      this.setState({\n        favColor: newColor\n      });\n    };\n\n    this.handelFavorite = name => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchItinerariesFavorite(emailAdded, name);\n    };\n\n    this.handelDeleteFavorite = name => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchDeleteFavorite(emailAdded, name);\n    };\n\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email; // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container  itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      className: \"col-sm-4\",\n      size: \"3x\",\n      onClick: () => itinerary.favorites.includes(email) ? this.handelDeleteFavorite(itinerary.name) : this.handelFavorite(itinerary.name),\n      style: itinerary.favorites.includes(email) ? {\n        color: \"red\"\n      } : {\n        color: \"#ffeb098\"\n      } // onClick={() => this.handelFavorite(itinerary.name)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(AddComments, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city)),\n  fetchItinerariesFavorite: (emailAdded, name) => dispatch(fetchItinerariesFavorite(emailAdded, name)),\n  fetchDeleteFavorite: (emailAdded, name) => dispatch(fetchDeleteFavorite(emailAdded, name))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","fetchItinerariesByCityName","fetchItinerariesFavorite","fetchDeleteFavorite","FontAwesomeIcon","AddComments","faHeart","green","red","Itinerary","constructor","handelChange","e","console","log","newColor","state","favColor","setState","handelFavorite","name","emailAdded","props","user","email","handelDeleteFavorite","itineraries","favorites","bind","componentDidMount","city","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","activities","duration","price","includes","color","mapStateToProps","ownProps","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n// import { login } from \"../store/actions/usersAction\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { fetchItinerariesFavorite } from \"../store/actions/itineraryActions\";\nimport { fetchDeleteFavorite } from \"../store/actions/itineraryActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddComments from \"../Component/AddComments\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\n// import { Button } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (e) => {\n    console.log(e);\n    const newColor = this.state.favColor === green ? red : green;\n    this.setState({ favColor: newColor });\n  };\n  handelFavorite = (name) => {\n    const emailAdded = this.props.user.email;\n\n    this.props.fetchItinerariesFavorite(emailAdded, name);\n  };\n  handelDeleteFavorite = (name) => {\n    const emailAdded = this.props.user.email;\n    this.props.fetchDeleteFavorite(emailAdded, name);\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n    // const { itineraries } = this.props;\n    return (\n      <div>\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container  itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <div className=\"row justify-content-center\">\n                  <FontAwesomeIcon\n                    icon={faHeart}\n                    className=\"col-sm-4\"\n                    size=\"3x\"\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(itinerary.name)\n                        : this.handelFavorite(itinerary.name)\n                    }\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"#ffeb098\" }\n                    }\n\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                  />\n                  <AddComments />\n                  {/* <Button\n                    color=\"danger\"\n                    className=\"col-sm-4\"\n                    size=\"lg\"\n                    onClick={this.handelChange}\n                  >\n                    &times;\n                  </Button> */}\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n\n  fetchItinerariesFavorite: (emailAdded, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, name)),\n  fetchDeleteFavorite: (emailAdded, name) =>\n    dispatch(fetchDeleteFavorite(emailAdded, name)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}