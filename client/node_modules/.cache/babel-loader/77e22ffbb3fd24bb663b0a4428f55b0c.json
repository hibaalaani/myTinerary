{"ast":null,"code":"import axios from \"axios\"; // export const FITCH_CITY = \"FITCH_CITY\";\n\nimport jwt_decode from \"jwt-decode\"; // I cleaned a bit your action, It was almost good, just a few probem with the .json() convertion and handeling the payload\n//it shuld work now ;)\n\nexport const fetchCitiesAction = () => {\n  return dispatch => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/cities/all\").then(resp => {\n      return resp.json();\n    }).then(json => {\n      dispatch({\n        type: \"FETCH_CITIES_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_CITIES_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const fetchAddCity = (name, country, picture, token) => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/cities/\", name, country, picture, token).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        const token = res.data.token;\n        localStorage.setItem(\"token\", token);\n        console.log(\"token\", token);\n        const decoded = jwt_decode(token); // decode your token here\n\n        console.log(\"decoded\", decoded); //send the user to his account page\n\n        dispatch({\n          type: \"ADD_CITY\",\n          token\n        });\n        dispatch(fetchCitiesAction());\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"problem with email\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your email and link\");\n        }\n      }\n    });\n  };\n}; // add the token to the headers of the axios request","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/store/actions/cityActions.js"],"names":["axios","jwt_decode","fetchCitiesAction","dispatch","fetch","then","resp","json","type","payload","catch","err","fetchAddCity","name","country","picture","token","post","res","console","log","status","data","localStorage","setItem","decoded","error","response","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAQC,QAAD,IAAc;AACnB;AACAC,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,OAAO,EAAEF;AAAzC,OAAD,CAAR;AACD,KANH,EAOGG,KAPH,CAOUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,OAAO,EAAEE;AAAvC,OAAD,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;AAeP,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,EAAyBC,KAAzB,KAAmC;AAC7D,SAAQb,QAAD,IAAc;AACnBH,IAAAA,KAAK,CACFiB,IADH,CACQ,mCADR,EAC6CJ,IAD7C,EACmDC,OADnD,EAC4DC,OAD5D,EACqEC,KADrE,EAEGX,IAFH,CAESa,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;;AACA,UAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAML,KAAK,GAAGE,GAAG,CAACI,IAAJ,CAASN,KAAvB;AACAO,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,cAAMS,OAAO,GAAGxB,UAAU,CAACe,KAAD,CAA1B,CAJsB,CAIa;;AAEnCG,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,OAAvB,EANsB,CAOtB;;AACAtB,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE,UAAR;AAAoBQ,UAAAA;AAApB,SAAD,CAAR;AACAb,QAAAA,QAAQ,CAACD,iBAAiB,EAAlB,CAAR;AACD;AACF,KAfH,EAgBGQ,KAhBH,CAgBUgB,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUM,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeN,MAAf,KAA0B,GAA9B,EAAmC;AACjCO,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF;AACF,KA1BH;AA2BD,GA5BD;AA6BD,CA9BM,C,CA+BP","sourcesContent":["import axios from \"axios\";\n// export const FITCH_CITY = \"FITCH_CITY\";\nimport jwt_decode from \"jwt-decode\";\n// I cleaned a bit your action, It was almost good, just a few probem with the .json() convertion and handeling the payload\n//it shuld work now ;)\nexport const fetchCitiesAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/cities/all\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_CITIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_CITIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchAddCity = (name, country, picture, token) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/cities/\", name, country, picture, token)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          const token = res.data.token;\n          localStorage.setItem(\"token\", token);\n          console.log(\"token\", token);\n          const decoded = jwt_decode(token); // decode your token here\n\n          console.log(\"decoded\", decoded);\n          //send the user to his account page\n          dispatch({ type: \"ADD_CITY\", token });\n          dispatch(fetchCitiesAction());\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n// add the token to the headers of the axios request\n"]},"metadata":{},"sourceType":"module"}