{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\"; // import dependency\n\nimport { Redirect } from \"react-router-dom\";\nimport UserAccount from \"../../Component/UserAccount\";\nexport const fetchUsersAction = () => {\n  return dispatch => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/users/all\").then(resp => {\n      return resp.json();\n    }).then(json => {\n      dispatch({\n        type: \"FETCH_USERS_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_USERS_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const register = newUser => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/users/register\", newUser).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        const token = res.data.token;\n        localStorage.setItem(\"token\", token);\n        console.log(\"token\", token);\n        const decoded = jwt_decode(token); // decode your token here\n        // window.location = \"/Login\";\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"Register error\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your Register\");\n        }\n      }\n    }); //add the full url of your back end\n  };\n};\nexport const login = userData => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/users/login\", userData).then(res => {\n      console.log(\"response\", res.data.token);\n\n      if (res.status === 200) {\n        // decode the token\n        const token = res.data.token;\n        console.log(token);\n        localStorage.setItem(\"token\", res.data.token);\n        const decoded = jwt_decode(token); // decode your token here\n\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: decoded,\n          token: res.data.token\n        });\n      }\n    }).catch(error => {\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"loggin error\");\n        } else {// alert(\"error from Login\");\n        }\n      }\n    }); //add the full url of your back end\n    // axios.get(\"http://localhost:3000/Landing\");\n  };\n}; //////////////log out\n\nexport const logUserOut = () => {\n  return dispatch => {\n    axios.get(\"http://localhost:3000/Landing\");\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: \"LOGED_OUT\"\n    });\n  };\n};","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/store/actions/usersAction.js"],"names":["axios","jwt_decode","Redirect","UserAccount","fetchUsersAction","dispatch","fetch","then","resp","json","type","payload","catch","err","register","newUser","post","res","console","log","status","token","data","localStorage","setItem","decoded","error","response","alert","login","userData","logUserOut","get","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AACrC,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACnB;AACAC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,qBAAR;AAA+BC,QAAAA,OAAO,EAAEF;AAAxC,OAAD,CAAR;AACD,KANH,EAOGG,KAPH,CAOUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAEE;AAAtC,OAAD,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAa;AACnC,SAAQV,QAAD,IAAc;AACnBL,IAAAA,KAAK,CACFgB,IADH,CACQ,0CADR,EACoDD,OADpD,EAEGR,IAFH,CAESU,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;;AACA,UAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAJ,CAASD,KAAvB;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,cAAMI,OAAO,GAAGxB,UAAU,CAACoB,KAAD,CAA1B,CAJsB,CAIa;AACnC;AACD;AACF,KAXH,EAYGT,KAZH,CAYUc,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUO,KAAK,CAACC,QAA5B;;AACA,UAAID,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeP,MAAf,KAA0B,GAA9B,EAAmC;AACjCQ,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF;AACF,KAtBH,EADmB,CAwBnB;AACD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMC,KAAK,GAAIC,QAAD,IAAc;AACjC,SAAQzB,QAAD,IAAc;AACnBL,IAAAA,KAAK,CACFgB,IADH,CACQ,uCADR,EACiDc,QADjD,EAEGvB,IAFH,CAESU,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAG,CAACK,IAAJ,CAASD,KAAjC;;AACA,UAAIJ,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,cAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAJ,CAASD,KAAvB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,GAAG,CAACK,IAAJ,CAASD,KAAvC;AACA,cAAMI,OAAO,GAAGxB,UAAU,CAACoB,KAAD,CAA1B,CALsB,CAKa;;AACnChB,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAE,eADC;AAEPC,UAAAA,OAAO,EAAEc,OAFF;AAGPJ,UAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAHT,SAAD,CAAR;AAKD;AACF,KAhBH,EAiBGT,KAjBH,CAiBUc,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,YAAID,KAAK,CAACC,QAAN,CAAeP,MAAf,KAA0B,GAA9B,EAAmC;AACjCQ,UAAAA,KAAK,CAAC,cAAD,CAAL;AACD,SAFD,MAEO,CACL;AACD;AACF;AACF,KAzBH,EADmB,CA2BnB;AACA;AACD,GA7BD;AA8BD,CA/BM,C,CAgCP;;AACA,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC9B,SAAQ1B,QAAD,IAAc;AACnBL,IAAAA,KAAK,CAACgC,GAAN,CAAU,+BAAV;AACAT,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA5B,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAJD;AAKD,CANM","sourcesContent":["import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\"; // import dependency\nimport { Redirect } from \"react-router-dom\";\nimport UserAccount from \"../../Component/UserAccount\";\nexport const fetchUsersAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/users/all\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_USERS_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_USERS_ERROR\", payload: err });\n      });\n  };\n};\n\nexport const register = (newUser) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/register\", newUser)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          const token = res.data.token;\n          localStorage.setItem(\"token\", token);\n          console.log(\"token\", token);\n          const decoded = jwt_decode(token); // decode your token here\n          // window.location = \"/Login\";\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"Register error\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your Register\");\n          }\n        }\n      });\n    //add the full url of your back end\n  };\n};\n\nexport const login = (userData) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/login\", userData)\n      .then((res) => {\n        console.log(\"response\", res.data.token);\n        if (res.status === 200) {\n          // decode the token\n          const token = res.data.token;\n          console.log(token);\n          localStorage.setItem(\"token\", res.data.token);\n          const decoded = jwt_decode(token); // decode your token here\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: decoded,\n            token: res.data.token,\n          });\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"loggin error\");\n          } else {\n            // alert(\"error from Login\");\n          }\n        }\n      });\n    //add the full url of your back end\n    // axios.get(\"http://localhost:3000/Landing\");\n  };\n};\n//////////////log out\nexport const logUserOut = () => {\n  return (dispatch) => {\n    axios.get(\"http://localhost:3000/Landing\");\n    localStorage.removeItem(\"token\");\n    dispatch({ type: \"LOGED_OUT\" });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}