{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddComments from \"../Component/AddComments\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { fetchItinerariesFavorite, fetchItinerariesDeleteFavorite, fetchDeleteComment } from \"../store/actions/itineraryActions\";\nimport AddItinerary from \"./AddItinerary\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, Card, Accordion, Container, Row, Col } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      const newColor = this.state.favColor === green ? red : green;\n      this.setState({\n        favColor: newColor\n      });\n    };\n\n    this.handelFavorite = (id, name) => {\n      if (this.props.user.email == null) {\n        alert(\"you need tpo log in\");\n      } else {\n        const emailAdded = this.props.user.email;\n        this.props.fetchItinerariesFavorite(emailAdded, id, name);\n      }\n    };\n\n    this.handelDeleteFavorite = (id, name) => {\n      if (this.props.user.email == null) {\n        alert(\"you need tpo log in\");\n      } else {\n        const emailAdded = this.props.user.email;\n        this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n      }\n    };\n\n    this.handelDeleteComment = (name, id, comments) => {\n      // const email = this.props.user.email;\n      // const msg = this.state.comments.msg;\n      this.props.fetchDeleteComment(comments, name, id);\n    };\n\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n    const user = this.props.user; // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container m-2 itinerary rounded\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title pt-3 text-light col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(FontAwesomeIcon, {\n      className: \"pt-3\",\n      icon: faHeart,\n      size: \"3x\",\n      style: itinerary.favorites.includes(email) ? {\n        color: \"red\"\n      } : {\n        color: \"#3986c3\"\n      } // onClick={() => this.handelFavorite(itinerary.name)}\n      ,\n      onClick: () => itinerary.favorites.includes(email) ? this.handelDeleteFavorite(itinerary._id, itinerary.name) : this.handelFavorite(itinerary._id, itinerary.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      className: \"card-body\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price), React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"outline-info\",\n      size: \"sm\",\n      eventKey: \"0\",\n      \"aria-controls\": \"example-fade-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"What Other Said\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, itinerary.comments && itinerary.comments.map((comment, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        className: \"textColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, comment.msg), React.createElement(\"footer\", {\n        className: \"blockquote-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"cite\", {\n        title: \"Source Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Written by\"), \" \", comment.email, \" \"), React.createElement(Button, {\n        variant: \"outline-danger\",\n        size: \"sm\",\n        \"aria-controls\": \"example-fade-text\",\n        onClick: () => comment.email && comment.email.includes(email) ? this.handelDeleteComment(itinerary.name, itinerary._id, itinerary.comments) : alert(\"its not your comment\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Delete Comment\"))))));\n    })))), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(AddComments, {\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))))), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(AddItinerary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    comments: state.itineraries.comments\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city)),\n  fetchItinerariesFavorite: (emailAdded, id, name) => dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) => dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n  fetchDeleteComment: (comments, name, id) => dispatch(fetchDeleteComment(comments, name, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","AddComments","fetchItinerariesByCityName","fetchItinerariesFavorite","fetchItinerariesDeleteFavorite","fetchDeleteComment","AddItinerary","FontAwesomeIcon","faHeart","Button","Card","Accordion","Container","Row","Col","green","red","Itinerary","constructor","handelChange","e","newColor","state","favColor","setState","handelFavorite","id","name","props","user","email","alert","emailAdded","handelDeleteFavorite","handelDeleteComment","comments","itineraries","favorites","componentDidMount","city","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","activities","includes","color","_id","duration","price","comment","msg","mapStateToProps","ownProps","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddComments from \"../Component/AddComments\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport {\n  fetchItinerariesFavorite,\n  fetchItinerariesDeleteFavorite,\n  fetchDeleteComment,\n} from \"../store/actions/itineraryActions\";\nimport AddItinerary from \"./AddItinerary\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, Card, Accordion, Container, Row, Col } from \"react-bootstrap\";\n\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n      comments: [],\n    };\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (e) => {\n    const newColor = this.state.favColor === green ? red : green;\n    this.setState({ favColor: newColor });\n  };\n  handelFavorite = (id, name) => {\n    if (this.props.user.email == null) {\n      alert(\"you need tpo log in\");\n    } else {\n      const emailAdded = this.props.user.email;\n\n      this.props.fetchItinerariesFavorite(emailAdded, id, name);\n    }\n  };\n  handelDeleteFavorite = (id, name) => {\n    if (this.props.user.email == null) {\n      alert(\"you need tpo log in\");\n    } else {\n      const emailAdded = this.props.user.email;\n      this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n    }\n  };\n  handelDeleteComment = (name, id, comments) => {\n    // const email = this.props.user.email;\n    // const msg = this.state.comments.msg;\n\n    this.props.fetchDeleteComment(comments, name, id);\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n    const user = this.props.user;\n    // const { itineraries } = this.props;\n    return (\n      <div className=\"container\">\n        <h3>Our Itineraries</h3>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container m-2 itinerary rounded\"\n              key={index}\n              itinerary={itinerary}\n            >\n              <div className=\"row justify-content-between\">\n                <h4 className=\"card-title pt-3 text-light col-6\">\n                  Activities in {itinerary.name} : {itinerary.activities}\n                </h4>\n\n                <FontAwesomeIcon\n                  className=\"pt-3\"\n                  icon={faHeart}\n                  size=\"3x\"\n                  style={\n                    itinerary.favorites.includes(email)\n                      ? { color: \"red\" }\n                      : { color: \"#3986c3\" }\n                  }\n                  // onClick={() => this.handelFavorite(itinerary.name)}\n                  onClick={() =>\n                    itinerary.favorites.includes(email)\n                      ? this.handelDeleteFavorite(itinerary._id, itinerary.name)\n                      : this.handelFavorite(itinerary._id, itinerary.name)\n                  }\n                />\n              </div>\n              <img\n                className=\"card-body\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <Accordion defaultActiveKey=\"0\">\n                  {/* <Card.Header className=\"textColor\"> */}\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"outline-info\"\n                    size=\"sm\"\n                    eventKey=\"0\"\n                    aria-controls=\"example-fade-text\"\n                  >\n                    What Other Said\n                  </Accordion.Toggle>\n                  {/* </Card.Header> */}\n                  <Accordion.Collapse eventKey=\"0\">\n                    <React.Fragment>\n                      {itinerary.comments &&\n                        itinerary.comments.map((comment, index) => {\n                          return (\n                            <div key={index}>\n                              <Container>\n                                <Row>\n                                  <Col>\n                                    {/* <Card style={{ width: \"18rem\" }}> */}\n\n                                    <Card.Body>\n                                      <Card.Text className=\"textColor\">\n                                        {comment.msg}\n                                      </Card.Text>\n                                      <footer className=\"blockquote-footer\">\n                                        <cite title=\"Source Title\">\n                                          Written by\n                                        </cite>{\" \"}\n                                        {comment.email}{\" \"}\n                                      </footer>\n                                      <Button\n                                        variant=\"outline-danger\"\n                                        size=\"sm\"\n                                        aria-controls=\"example-fade-text\"\n                                        onClick={() =>\n                                          comment.email &&\n                                          comment.email.includes(email)\n                                            ? this.handelDeleteComment(\n                                                itinerary.name,\n                                                itinerary._id,\n                                                itinerary.comments\n                                              )\n                                            : alert(\"its not your comment\")\n                                        }\n                                      >\n                                        Delete Comment\n                                      </Button>\n                                    </Card.Body>\n                                  </Col>\n                                </Row>\n                              </Container>\n                            </div>\n                          );\n                        })}\n                    </React.Fragment>\n                  </Accordion.Collapse>\n                </Accordion>\n                <div className=\"row justify-content-center\">\n                  {/* <FontAwesomeIcon\n                    icon={faHeart}\n                    size=\"3x\"\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"green\" }\n                    }\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(\n                            itinerary._id,\n                            itinerary.name\n                          )\n                        : this.handelFavorite(itinerary._id, itinerary.name)\n                    }\n                  /> */}\n\n                  <AddComments itinerary={itinerary} />\n                </div>\n              </div>\n            </div>\n          ))}\n        <React.Fragment>\n          <AddItinerary />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    comments: state.itineraries.comments,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n\n  fetchItinerariesFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n  fetchDeleteComment: (comments, name, id) =>\n    dispatch(fetchDeleteComment(comments, name, id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}