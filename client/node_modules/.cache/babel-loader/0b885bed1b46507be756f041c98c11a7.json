{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n// import { login } from \"../store/actions/usersAction\";\n\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport { fetchItinerariesFavorite, fetchDeleteFavorite, getComments } from \"../store/actions/itineraryActions\"; // import {} from \"../store/actions/itineraryActions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = name => {\n      // console.log(e);\n      // const newColor = this.state.favColor === green ? red : green;\n      const emailAdded = this.props.user.email;\n      const comments = this.props.itineraries.itineraries.comments;\n      this.props.getComments(comments, emailAdded, name);\n    };\n\n    this.handelFavorite = name => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchItinerariesFavorite(emailAdded, name);\n    };\n\n    this.handelDeleteFavorite = name => {\n      const emailAdded = this.props.user.email;\n      this.props.fetchDeleteFavorite(emailAdded, name);\n    };\n\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email; // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container  itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      className: \"col-sm-4\",\n      size: \"3x\",\n      onClick: () => itinerary.favorites.includes(email) ? this.handelDeleteFavorite(itinerary.name) : this.handelFavorite(itinerary.name),\n      style: itinerary.favorites.includes(email) ? {\n        color: \"red\"\n      } : {\n        color: \"green\"\n      } // onClick={() => this.handelFavorite(itinerary.name)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"danger\",\n      className: \"col-sm-4\",\n      size: \"lg\",\n      onClick: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Comments\"))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city)),\n  fetchItinerariesFavorite: (emailAdded, name) => dispatch(fetchItinerariesFavorite(emailAdded, name)),\n  fetchDeleteFavorite: (emailAdded, name) => dispatch(fetchDeleteFavorite(emailAdded, name)),\n  getComments: (comments, emailAdded, name) => dispatch(getComments(comments, emailAdded, name))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","fetchItinerariesByCityName","fetchItinerariesFavorite","fetchDeleteFavorite","getComments","FontAwesomeIcon","faHeart","Button","green","red","Itinerary","constructor","handelChange","name","emailAdded","props","user","email","comments","itineraries","handelFavorite","handelDeleteFavorite","state","favorites","favColor","bind","componentDidMount","city","match","params","filter","filterItinerary","itinerary","index","profile","render","filterList","map","activities","duration","price","includes","color","mapStateToProps","ownProps","console","log","users","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,SAASC,0BAAT,QAA2C,mCAA3C;AACA,SACEC,wBADF,EAEEC,mBAFF,EAGEC,WAHF,QAIO,mCAJP,C,CAKA;;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,GAAG,GAAG,SAAZ;;AACA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAChCY,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,YAdc,GAcEC,IAAD,IAAU;AACvB;AACA;AACA,YAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAnC;AACA,YAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,WAAX,CAAuBA,WAAvB,CAAmCD,QAApD;AACA,WAAKH,KAAL,CAAWX,WAAX,CAAuBc,QAAvB,EAAiCJ,UAAjC,EAA6CD,IAA7C;AACD,KApBa;;AAAA,SAqBdO,cArBc,GAqBIP,IAAD,IAAU;AACzB,YAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAnC;AAEA,WAAKF,KAAL,CAAWb,wBAAX,CAAoCY,UAApC,EAAgDD,IAAhD;AACD,KAzBa;;AAAA,SA0BdQ,oBA1Bc,GA0BUR,IAAD,IAAU;AAC/B,YAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAnC;AACA,WAAKF,KAAL,CAAWZ,mBAAX,CAA+BW,UAA/B,EAA2CD,IAA3C;AACD,KA7Ba;;AAEZ,SAAKS,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE,EADF;AAEXI,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,QAAQ,EAAEhB;AAHC,KAAb;AAKA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBF,IAArC;AAEA,SAAKZ,KAAL,CAAWd,0BAAX,CAAsC0B,IAAtC;AACD;;AAiBDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKf,KAAL,CAAWI,WAAf,EAA4B;AAC1B,YAAMY,eAAe,GAAG,KAAKhB,KAAL,CAAWI,WAAX,CAAuBW,MAAvB,CACtB,CAACE,SAAD,EAAYC,KAAZ,KAAsB;AACpB,eAAOD,SAAS,CAACE,OAAjB;AACD,OAHqB,CAAxB;AAKA,aAAOH,eAAP;AACD,KAPD,MAOO;AACL,aAAO,EAAP;AACD;AACF;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKN,MAAL,EAAnB;AACA,UAAMb,KAAK,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,KAA9B,CAFO,CAGP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEGmB,UAAU,IACTA,UAAU,CAACC,GAAX,CAAe,CAACL,SAAD,EAAYC,KAAZ,KACb;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,GAAG,EAAEA,KAFP;AAGE,MAAA,SAAS,EAAED,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiBA,SAAS,CAACnB,IAD3B,SACoCmB,SAAS,CAACM,UAD9C,CANF,EASE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,GAAG,EAAEN,SAAS,CAACE,OAFjB;AAGE,MAAA,GAAG,EAAEF,SAAS,CAACnB,IAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAcE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiBmB,SAAS,CAACO,QAD3B,kBACiD,GADjD,EAEGP,SAAS,CAACQ,KAFb,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAElC,OADR;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,OAAO,EAAE,MACP0B,SAAS,CAACT,SAAV,CAAoBkB,QAApB,CAA6BxB,KAA7B,IACI,KAAKI,oBAAL,CAA0BW,SAAS,CAACnB,IAApC,CADJ,GAEI,KAAKO,cAAL,CAAoBY,SAAS,CAACnB,IAA9B,CAPR;AASE,MAAA,KAAK,EACHmB,SAAS,CAACT,SAAV,CAAoBkB,QAApB,CAA6BxB,KAA7B,IACI;AAAEyB,QAAAA,KAAK,EAAE;AAAT,OADJ,GAEI;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAZR,CAcE;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAiBE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,OAAO,EAAE,KAAK9B,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,CALF,CAdF,CADF,CAHJ,CADF;AAuDD;;AAtG+B;;AAwGlC,MAAM+B,eAAe,GAAG,CAACrB,KAAD,EAAQsB,QAAR,KAAqB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BxB,KAA1B;AAEA,SAAO;AACLH,IAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBA,WAD1B;AAELH,IAAAA,IAAI,EAAEM,KAAK,CAACyB,KAFP;AAGLxB,IAAAA,SAAS,EAAED,KAAK,CAACH,WAAN,CAAkBI;AAHxB,GAAP;AAKD,CARD;;AASA,MAAMyB,kBAAkB,GAAIC,QAAD,KAAe;AACxChD,EAAAA,0BAA0B,EAAG0B,IAAD,IAC1BsB,QAAQ,CAAChD,0BAA0B,CAAC0B,IAAD,CAA3B,CAF8B;AAIxCzB,EAAAA,wBAAwB,EAAE,CAACY,UAAD,EAAaD,IAAb,KACxBoC,QAAQ,CAAC/C,wBAAwB,CAACY,UAAD,EAAaD,IAAb,CAAzB,CAL8B;AAMxCV,EAAAA,mBAAmB,EAAE,CAACW,UAAD,EAAaD,IAAb,KACnBoC,QAAQ,CAAC9C,mBAAmB,CAACW,UAAD,EAAaD,IAAb,CAApB,CAP8B;AAQxCT,EAAAA,WAAW,EAAE,CAACc,QAAD,EAAWJ,UAAX,EAAuBD,IAAvB,KACXoC,QAAQ,CAAC7C,WAAW,CAACc,QAAD,EAAWJ,UAAX,EAAuBD,IAAvB,CAAZ;AAT8B,CAAf,CAA3B;;AAWA,eAAeb,OAAO,CAAC2C,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CtC,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n// import { login } from \"../store/actions/usersAction\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport {\n  fetchItinerariesFavorite,\n  fetchDeleteFavorite,\n  getComments,\n} from \"../store/actions/itineraryActions\";\n// import {} from \"../store/actions/itineraryActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (name) => {\n    // console.log(e);\n    // const newColor = this.state.favColor === green ? red : green;\n    const emailAdded = this.props.user.email;\n    const comments = this.props.itineraries.itineraries.comments;\n    this.props.getComments(comments, emailAdded, name);\n  };\n  handelFavorite = (name) => {\n    const emailAdded = this.props.user.email;\n\n    this.props.fetchItinerariesFavorite(emailAdded, name);\n  };\n  handelDeleteFavorite = (name) => {\n    const emailAdded = this.props.user.email;\n    this.props.fetchDeleteFavorite(emailAdded, name);\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n    // const { itineraries } = this.props;\n    return (\n      <div>\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container  itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <div className=\"row justify-content-center\">\n                  <FontAwesomeIcon\n                    icon={faHeart}\n                    className=\"col-sm-4\"\n                    size=\"3x\"\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(itinerary.name)\n                        : this.handelFavorite(itinerary.name)\n                    }\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"green\" }\n                    }\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                  />\n                  <Button\n                    color=\"danger\"\n                    className=\"col-sm-4\"\n                    size=\"lg\"\n                    onClick={this.handelChange}\n                  >\n                    Comments\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    favorites: state.itineraries.favorites,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n\n  fetchItinerariesFavorite: (emailAdded, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, name)),\n  fetchDeleteFavorite: (emailAdded, name) =>\n    dispatch(fetchDeleteFavorite(emailAdded, name)),\n  getComments: (comments, emailAdded, name) =>\n    dispatch(getComments(comments, emailAdded, name)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}