{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\AddCity.js\";\nimport React, { Component } from \"react\";\nimport { fetchCitiesAction, fetchAddCity } from \"../store/actions/cityActions\";\nimport { connect } from \"react-redux\";\n\nclass AddCity extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handelSubmit = e => {\n      e.preventDefault();\n      console.log(e); // let cities = this.props.cities;\n      // this.props.addNinja(this.state);\n      // retrieve token from local storage and send it to the add city action\n\n      const token = this.props.user.token;\n      this.props.fetchAddCity(this.state.cities, token); // let cities = { ...this.state.cities, cities };\n      // this.setState({\n      //   cities: cities\n      // });\n\n      console.log(\"submit\", this.state);\n    };\n\n    this.state = {\n      name: null,\n      country: null,\n      picture: null\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.cities;\n    this.props.fetchCitiesAction(city);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handelSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mx-2\",\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      onChange: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"mx-2\",\n      htmlFor: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", \"Country\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"country\",\n      onChange: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"mx-2\",\n      htmlFor: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Picture:\"), React.createElement(\"input\", {\n      type: \"url\",\n      id: \"picture\",\n      onChange: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"mx-2\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Add New City\")));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToState\", state);\n  return {\n    cities: state.cities.cities,\n    user: state.user.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAddCity: city => dispatch(fetchAddCity(city)),\n  fetchCitiesAction: city => dispatch(fetchCitiesAction(city))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCity);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/AddCity.js"],"names":["React","Component","fetchCitiesAction","fetchAddCity","connect","AddCity","constructor","handelChange","e","setState","target","id","value","handelSubmit","preventDefault","console","log","token","props","user","state","cities","name","country","picture","componentDidMount","city","render","mapStateToProps","ownProps","users","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,8BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC9BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,YAdc,GAcEC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADZ,OAAd;AAGD,KAlBa;;AAAA,SAmBdC,YAnBc,GAmBEL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ,EAFoB,CAIpB;AACA;AACA;;AACA,YAAMS,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAA9B;AACA,WAAKC,KAAL,CAAWf,YAAX,CAAwB,KAAKiB,KAAL,CAAWC,MAAnC,EAA2CJ,KAA3C,EARoB,CASpB;AACA;AACA;AACA;;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKI,KAA3B;AACD,KAlCa;;AAEZ,SAAKA,KAAL,GAAa;AACXE,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKR,KAAL,CAAWG,MAAxB;AACA,SAAKH,KAAL,CAAWhB,iBAAX,CAA6BwB,IAA7B;AACD;;AAuBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,OAAO,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,UADF,EAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,QAAQ,EAAE,KAAKN,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,OAAO,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,YANF,EAUE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,SAAtB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,OAAO,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,EAcE;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,EAAE,EAAC,SAArB;AAA+B,MAAA,QAAQ,EAAE,KAAKA,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF,CADF,CADF;AAuBD;;AA5D6B;;AA8DhC,MAAMqB,eAAe,GAAG,CAACR,KAAD,EAAQS,QAAR,KAAqB;AAC3Cd,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,KAA/B;AAEA,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaA,MADhB;AAELF,IAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWW;AAFZ,GAAP;AAID,CAPD;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC7B,EAAAA,YAAY,EAAGuB,IAAD,IAAUM,QAAQ,CAAC7B,YAAY,CAACuB,IAAD,CAAb,CADQ;AAExCxB,EAAAA,iBAAiB,EAAGwB,IAAD,IAAUM,QAAQ,CAAC9B,iBAAiB,CAACwB,IAAD,CAAlB;AAFG,CAAf,CAA3B;;AAKA,eAAetB,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,OAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { fetchCitiesAction, fetchAddCity } from \"../store/actions/cityActions\";\nimport { connect } from \"react-redux\";\n\nclass AddCity extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: null,\n      country: null,\n      picture: null,\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.cities;\n    this.props.fetchCitiesAction(city);\n  }\n\n  handelChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n    console.log(e);\n\n    // let cities = this.props.cities;\n    // this.props.addNinja(this.state);\n    // retrieve token from local storage and send it to the add city action\n    const token = this.props.user.token;\n    this.props.fetchAddCity(this.state.cities, token);\n    // let cities = { ...this.state.cities, cities };\n    // this.setState({\n    //   cities: cities\n    // });\n\n    console.log(\"submit\", this.state);\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handelSubmit}>\n          <label className=\"mx-2\" htmlFor=\"name\">\n            {\" \"}\n            Name:\n          </label>\n          <input type=\"text\" id=\"name\" onChange={this.handelChange} />\n          <label className=\"mx-2\" htmlFor=\"country\">\n            {\" \"}\n            Country\n          </label>\n          <input type=\"text\" id=\"country\" onChange={this.handelChange} />\n          <label className=\"mx-2\" htmlFor=\"picture\">\n            Picture:\n          </label>\n          <input type=\"url\" id=\"picture\" onChange={this.handelChange} />\n          <button className=\"mx-2\" type=\"submit\">\n            Add New City\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToState\", state);\n\n  return {\n    cities: state.cities.cities,\n    user: state.user.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAddCity: (city) => dispatch(fetchAddCity(city)),\n  fetchCitiesAction: (city) => dispatch(fetchCitiesAction(city)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCity);\n"]},"metadata":{},"sourceType":"module"}