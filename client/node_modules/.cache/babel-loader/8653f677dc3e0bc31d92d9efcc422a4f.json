{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\UserAccount.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport JwtDecode from \"jwt-decode\";\nimport { register } from \"../store/actions/usersAction\";\nimport { login } from \"../store/actions/usersAction\"; // import { fetchUsersAction } from \"../store/actions/usersAction\";\n\nexport class UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const userData = this.props.payload;\n    this.props.register(userData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" you are finish the registration \", this.props.user.users));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    user: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: userData => dispatch(login(userData)),\n  register: newUser => dispatch(register(newUser))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/UserAccount.js"],"names":["React","Component","connect","Axios","JwtDecode","register","login","UserAccount","constructor","props","state","users","componentDidMount","userData","payload","render","user","mapStateToProps","ownProps","console","log","mapDispatchToProps","dispatch","newUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,SAASC,KAAT,QAAsB,8BAAtB,C,CACA;;AACA,OAAO,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AACzCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,OAA5B;AACA,SAAKL,KAAL,CAAWJ,QAAX,CAAoBQ,QAApB;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAsC,KAAKN,KAAL,CAAWO,IAAX,CAAgBL,KAAtD,CADF,CADF;AAKD;;AAlBwC;;AAoB3C,MAAMM,eAAe,GAAG,CAACP,KAAD,EAAQQ,QAAR,KAAqB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BV,KAA1B;AAEA,SAAO;AACLM,IAAAA,IAAI,EAAEN,KAAK,CAACC;AADP,GAAP;AAGD,CAND;;AAOA,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,KAAK,EAAGO,QAAD,IAAcS,QAAQ,CAAChB,KAAK,CAACO,QAAD,CAAN,CADW;AAExCR,EAAAA,QAAQ,EAAGkB,OAAD,IAAaD,QAAQ,CAACjB,QAAQ,CAACkB,OAAD,CAAT;AAFS,CAAf,CAA3B;;AAKA,eAAerB,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport JwtDecode from \"jwt-decode\";\nimport { register } from \"../store/actions/usersAction\";\n\nimport { login } from \"../store/actions/usersAction\";\n// import { fetchUsersAction } from \"../store/actions/usersAction\";\nexport class UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const userData = this.props.payload;\n    this.props.register(userData);\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1> you are finish the registration {this.props.user.users}</h1>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userData) => dispatch(login(userData)),\n  register: (newUser) => dispatch(register(newUser)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount);\n"]},"metadata":{},"sourceType":"module"}