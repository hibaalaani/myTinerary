{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nconst green = \"#39D1B4\";\nconst red = \"#FF0000\";\n\nclass Itinerary extends Component {\n  constructor() {\n    super();\n\n    this.handelChange = e => {\n      console.log(e);\n      const newColor = this.state.favColor == green ? red : green;\n      this.setState({\n        favColor: newColor\n      }); // this.setState({\n      ///change the button color\n      /////post the favourite to the user\n\n      const newFavourite = this.props.match.params.name;\n      console.log(\"newFavourite\", newFavourite);\n      axios.post(\"http://localhost:5000/api/users/favourite\", newFavourite).then(res => {\n        console.log(\"response\", res);\n\n        if (res.status === 200) {\n          let history = useHistory();\n          history.push(\"/home\"); //send the user to his account page\n          // window.location.href = \"/favourite\";\n          // browserHistory.push(\"/cities\");\n          // this.props.router.push(<url>)\n        }\n\n        this.setState({\n          users: [...this.state.favourite, newFavourite]\n        });\n      }).catch(error => {\n        console.log(\"error\" + error.response);\n\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"This email is already in use\");\n          } else {//alert with something else\n          }\n        }\n      }); // });\n    };\n\n    this.state = {\n      itineraries: [],\n      favourite: \"\",\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const city = this.props.match.params.city;\n    this.props.fetchItinerariesByCityName(city);\n  }\n\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter((itinerary, index) => {\n        return itinerary.profile;\n      });\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    const filterList = this.filter(); // const { itineraries } = this.props;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Our Itineraries\"), filterList && filterList.map((itinerary, index) => React.createElement(\"div\", {\n      className: \"container  itinerary\",\n      key: index,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title pt-3 text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Activities in \", itinerary.name, \" : \", itinerary.activities), React.createElement(\"img\", {\n      className: \"card-body  align-center\",\n      src: itinerary.profile,\n      alt: itinerary.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-light pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"The Price for \", itinerary.duration, \" With Hotels\", \" \", itinerary.price)))), React.createElement(\"button\", {\n      btn: true,\n      style: {\n        background: this.state.favColor\n      },\n      onClick: this.handelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Add To Your Favourite\", \" \"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n  return {\n    itineraries: state.itineraries.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Itinerary.js"],"names":["React","Component","connect","axios","useHistory","fetchItinerariesByCityName","green","red","Itinerary","constructor","handelChange","e","console","log","newColor","state","favColor","setState","newFavourite","props","match","params","name","post","then","res","status","history","push","users","favourite","catch","error","response","alert","itineraries","bind","componentDidMount","city","filter","filterItinerary","itinerary","index","profile","render","filterList","map","activities","duration","price","background","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nconst green = \"#39D1B4\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favourite: \"\",\n      favColor: green\n    };\n    this.handelChange = this.handelChange.bind(this);\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = e => {\n    console.log(e);\n    const newColor = this.state.favColor == green ? red : green;\n    this.setState({ favColor: newColor });\n    // this.setState({\n    ///change the button color\n    /////post the favourite to the user\n    const newFavourite = this.props.match.params.name;\n    console.log(\"newFavourite\", newFavourite);\n    axios\n      .post(\"http://localhost:5000/api/users/favourite\", newFavourite)\n      .then(res => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          let history = useHistory();\n          history.push(\"/home\");\n          //send the user to his account page\n          // window.location.href = \"/favourite\";\n          // browserHistory.push(\"/cities\");\n          // this.props.router.push(<url>)\n        }\n        this.setState({\n          users: [...this.state.favourite, newFavourite]\n        });\n      })\n      .catch(error => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"This email is already in use\");\n          } else {\n            //alert with something else\n          }\n        }\n      });\n    // });\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    // const { itineraries } = this.props;\n    return (\n      <div>\n        <h1>Our Itineraries</h1>\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container  itinerary\"\n              key={index}\n              itinerary={itinerary}\n            >\n              {/* <div> */}\n              <h3 className=\"card-title pt-3 text-light\">\n                Activities in {itinerary.name} : {itinerary.activities}\n              </h3>\n              <img\n                className=\"card-body  align-center\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n              </div>\n            </div>\n          ))}\n        <button\n          btn\n          style={{ background: this.state.favColor }}\n          onClick={this.handelChange}\n        >\n          Add To Your Favourite{\" \"}\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mamToState\", state);\n\n  return {\n    itineraries: state.itineraries.itineraries\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  fetchItinerariesByCityName: city => dispatch(fetchItinerariesByCityName(city))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n"]},"metadata":{},"sourceType":"module"}