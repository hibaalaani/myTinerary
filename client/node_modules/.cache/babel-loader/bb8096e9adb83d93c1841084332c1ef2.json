{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernProject2\\\\myTinerary\\\\client\\\\src\\\\Component\\\\Header.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { login } from \"../store/actions/usersAction\";\nimport { connect } from \"react-redux\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Form, ButtonGroup, Col } from \"reactstrap\"; // import Image from \"react-bootstrap/Image\";\n\nclass Header extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isOpen: false,\n      search: \"\",\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const userData = {\n      user: this.state.user\n    };\n    console.log(userData);\n    this.props.login(userData);\n  }\n\n  render() {\n    //toggle = () => this.setState({ isOpen: !isOpen });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"dark\",\n      dark: true,\n      expand: \"sm\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"MyItenarary\"), React.createElement(NavbarToggler, {\n      onClick: () => this.setState({\n        isOpen: !this.state.isOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"mr-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      dark: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/Cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", \"Cities We Offer\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/AddCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New City\")), this.props.user.isLoggedin ? React.createElement(NavLink, {\n      href: \"/LogOut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Log Out\") : React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      as: ButtonGroup,\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign\"), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      href: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Login \")), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Sign Up \"))))), React.createElement(Form, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-success \",\n      size: \"sm\",\n      \"p-0\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.user.isLoggedin ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Hello \", this.props.user.users) :\n    /* <img src={this.props.user.picture} alt=\"photo\" /> */\n    // <React.Fregment>\n    //   {/* <Col xs={6} md={4}> */}\n    //   <img src={this.props.user.picture} roundedCircle />\n    //   {/* </Col> */}\n    // </React.Fregment>\n    React.createElement(NavLink, {\n      href: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Login \"))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: userData => dispatch(login(userData))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/Component/Header.js"],"names":["React","Component","Link","login","connect","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","Form","ButtonGroup","Col","Header","constructor","props","state","isOpen","search","user","componentDidMount","userData","console","log","render","setState","isLoggedin","users","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { login } from \"../store/actions/usersAction\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  Form,\n  ButtonGroup,\n  Col,\n} from \"reactstrap\";\n// import Image from \"react-bootstrap/Image\";\nclass Header extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isOpen: false,\n      search: \"\",\n      user: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const userData = {\n      user: this.state.user,\n    };\n    console.log(userData);\n    this.props.login(userData);\n  }\n  render() {\n    //toggle = () => this.setState({ isOpen: !isOpen });\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" fixed=\"top\">\n          {/* <Link to=\"/\" id=\"RouterNavLink\"> */}\n          <NavbarBrand href=\"/\">MyItenarary</NavbarBrand>\n          {/* </Link> */}\n          <NavbarToggler\n            onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n          />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem dark=\"true\">\n                <NavLink href=\"/Cities\">\n                  {\" \"}\n                  {/* <Link to=\"/Cities\" id=\"RouterNavLink\"> */}\n                  Cities We Offer\n                  {/* </Link> */}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/AddCity\">\n                  {/*                   \n                  <Link to=\"/AddCity\" id=\"RouterNavLink\"> */}\n                  New City\n                  {/* </Link> */}\n                </NavLink>\n              </NavItem>\n              {this.props.user.isLoggedin ? (\n                <NavLink href=\"/LogOut\">\n                  {/* <Link href=\"/LogOut\" id=\"RouterNavLink\"> */} Log Out\n                  {/* </Link> */}\n                </NavLink>\n              ) : (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav as={ButtonGroup} caret>\n                    Sign\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      {\" \"}\n                      <NavLink href=\"/Login\">Login </NavLink>\n                    </DropdownItem>\n                    <DropdownItem>\n                      <NavLink href=\"/Users\">Sign Up </NavLink>\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            <Form inline>\n              <Button variant=\"outline-success \" size=\"sm\" p-0=\"true\">\n                {this.props.user.isLoggedin ? (\n                  <p> Hello {this.props.user.users}</p>\n                ) : (\n                  /* <img src={this.props.user.picture} alt=\"photo\" /> */\n\n                  // <React.Fregment>\n                  //   {/* <Col xs={6} md={4}> */}\n                  //   <img src={this.props.user.picture} roundedCircle />\n                  //   {/* </Col> */}\n                  // </React.Fregment>\n                  <NavLink href=\"/Login\">Login </NavLink>\n                )}\n              </Button>\n            </Form>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userData) => dispatch(login(userData)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}