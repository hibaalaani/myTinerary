{"ast":null,"code":"// I cleaned a bit your action, It was almost good, just a few probem with the .json() convertion and handeling the payload\n//it shuld work now ;)\nimport axios from \"axios\";\nimport jwt from \"jwt-decode\"; // import dependency\n// const jwtDecode = require(\"jwt-decode\");\n\nexport const fetchUsersAction = () => {\n  return dispatch => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/users/all\").then(resp => {\n      return resp.json();\n    }).then(json => {\n      dispatch({\n        type: \"FETCH_USERS_SUCCESS\",\n        payload: json\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"FETCH_USERS_ERROR\",\n        payload: err\n      });\n    });\n  };\n};\nexport const register = newUser => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/users/register\", newUser).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        //send the user to his account page\n        dispatch({\n          type: \"REGISTER_SUCCESS\",\n          payload: res\n        });\n        window.location = \"/UserAccount\";\n      }\n    }).catch(error => {\n      console.log(\"error\" + error.response);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"Register error\");\n        } else {\n          //alert with something else\n          alert(\"Be Sure From Your Register\");\n        }\n      }\n    }); //add the full url of your back end\n  };\n};\nexport const login = user => {\n  return dispatch => {\n    axios.post(\"http://localhost:5000/api/users/login\", user).then(res => {\n      console.log(\"response\", res);\n\n      if (res.status === 200) {\n        // decode the token\n        const token = res.data.token;\n        const decoded = jwt(token); // decode your token here\n\n        localStorage.setItem(\"token\", token);\n        console.log(decoded);\n        console.log(res); //send the user to his account page\n\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: decoded //send the decoded token instead\n\n        }); // window.location = \"/UserAccount\";\n      }\n    }).catch(error => {\n      console.log(\"error\" + error);\n\n      if (error.response) {\n        if (error.response.status === 409) {\n          alert(\"loggin error\");\n        } else {//alert with something else\n        }\n      }\n    }); //add the full url of your back end\n  };\n};","map":{"version":3,"sources":["D:/mernProject2/myTinerary/client/src/store/actions/usersAction.js"],"names":["axios","jwt","fetchUsersAction","dispatch","fetch","then","resp","json","type","payload","catch","err","register","newUser","post","res","console","log","status","window","location","error","response","alert","login","user","token","data","decoded","localStorage","setItem"],"mappings":"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","sourcesContent":["// I cleaned a bit your action, It was almost good, just a few probem with the .json() convertion and handeling the payload\n//it shuld work now ;)\nimport axios from \"axios\";\nimport jwt from \"jwt-decode\"; // import dependency\n\n// const jwtDecode = require(\"jwt-decode\");\nexport const fetchUsersAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/users/all\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_USERS_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_USERS_ERROR\", payload: err });\n      });\n  };\n};\n\nexport const register = (newUser) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/register\", newUser)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"REGISTER_SUCCESS\", payload: res });\n          window.location = \"/UserAccount\";\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"Register error\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your Register\");\n          }\n        }\n      });\n    //add the full url of your back end\n  };\n};\n\nexport const login = (user) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/login\", user)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          // decode the token\n          const token = res.data.token;\n          const decoded = jwt(token); // decode your token here\n          localStorage.setItem(\"token\", token);\n          console.log(decoded);\n          console.log(res);\n          //send the user to his account page\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: decoded, //send the decoded token instead\n          });\n\n          // window.location = \"/UserAccount\";\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"loggin error\");\n          } else {\n            //alert with something else\n          }\n        }\n      });\n    //add the full url of your back end\n  };\n};\n"]},"metadata":{},"sourceType":"module"}